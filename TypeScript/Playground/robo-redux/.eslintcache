[{"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/reportWebVitals.js":"1","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/index.js":"2","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/robots.js":"3","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/Card.js":"4","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/CardList.js":"5","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/constants.js":"6","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/containers/App.js":"7","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/Scroll.js":"8","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/reducers.js":"9","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/SearchBox.js":"10","/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/actions.js":"11"},{"size":362,"mtime":1608755571078,"results":"12","hashOfConfig":"13"},{"size":858,"mtime":1608812708640,"results":"14","hashOfConfig":"13"},{"size":7874,"mtime":1608754527122,"results":"15","hashOfConfig":"13"},{"size":474,"mtime":1608737952575,"results":"16","hashOfConfig":"13"},{"size":548,"mtime":1608737980268,"results":"17","hashOfConfig":"13"},{"size":57,"mtime":1608756765268,"results":"18","hashOfConfig":"13"},{"size":3330,"mtime":1608811432295,"results":"19","hashOfConfig":"13"},{"size":317,"mtime":1608738238904,"results":"20","hashOfConfig":"13"},{"size":417,"mtime":1608757415524,"results":"21","hashOfConfig":"13"},{"size":371,"mtime":1608737994045,"results":"22","hashOfConfig":"13"},{"size":143,"mtime":1608809794994,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lrlxa2",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/reportWebVitals.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/index.js",["48"],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/robots.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/Card.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/CardList.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/constants.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/containers/App.js",["49","50"],"import React, { useState, useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport CardList from '../component/CardList'\nimport { classMates } from '../robots'\nimport SearchBox from '../component/SearchBox'\nimport Scroll from '../component/Scroll'\nimport './App.css'\n\nimport { setSearchField } from '../actions'\n\nconst mSP = state => {\n    return {\n        searchField: state.searchField\n        // searchField: state.searchRobots.searchField\n    }\n}\n\nconst mDP = dispatch => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n    }\n}\n\n// always add an empty array to useEffect for it to act as component did mount\nfunction App(props) {\n    const robots = classMates\n    // const [counts, setCounts] = useState(1)\n    // const [robots, setRobots] = useState([])\n    // const [searchfield, setSearchfield] = useState('')\n    const { searchField, onSearchChange } = props\n\n    useEffect(() => {\n        console.log(props.store, 'component did mount')\n        // console.log(counts, ' render')\n    //     setCounts( counts + 1 )\n    //     fetch('https://jsonplaceholder.typicode.com/users')\n    //         .then(response => response.json())\n    //         .then(users => setRobots(users))\n    },[]);\n\n    // const onSearchChange = (event) => {\n    //     setSearchfield(event.target.value)\n    // }\n\n    const filteredRobots = robots.filter( robot => (\n        robot.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n    ))\n\n    if(!robots.length) return <h1 className='f1'> Loading </h1>\n    \n    return(\n        <div className='tc'>\n            <h1 className='f2'>Robo dudes</h1>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n                <CardList robots={filteredRobots}/>\n            </Scroll>\n        </div>\n    )\n}\n\n\n\n// class App extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n//             robots: [],\n//             searchfield: ''\n//         }\n//         // console.log('constructor')\n//     }\n\n//     componentDidMount() {\n//         // this.setState({robots: robots})\n//         // console.log('componentDidMount')\n//         // note fetch is part of the window object\n//         fetch('https://jsonplaceholder.typicode.com/users')\n//             .then(response => response.json())\n//             .then(users => this.setState({robots: users}))\n\n//     }\n\n//     onSearchChange = (event) => {\n//         this.setState({searchfield: event.target.value})\n//     }\n\n//     render(){   \n//         const { robots, searchfield } = this.state;\n//         // Note this destructuring eliminates the need to use this.state\n//         const filteredRobots = robots.filter( robot => (\n//             robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\n//         ))\n//         // console.log('render')\n\n//         if(!robots.length) return <h1 className='f1'> Loading </h1>\n        \n//         return(\n//             <div className='tc'>\n//                 <h1 className='f2'>Robo dudes</h1>\n//                 <SearchBox searchChange={this.onSearchChange}/>\n//                 <Scroll>\n//                     <CardList robots={filteredRobots}/>\n//                 </Scroll>\n//             </div>\n//         )\n//     }\n// }\n\nexport default connect(mSP,mDP)(App);",["51","52"],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/Scroll.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/reducers.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/component/SearchBox.js",[],"/Users/xolo/Desktop/Play-doh/TypeScript/Playground/robo-redux/src/actions.js",[],{"ruleId":"53","severity":1,"message":"54","line":3,"column":19,"nodeType":"55","messageId":"56","endLine":3,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":40,"column":7,"nodeType":"60","endLine":40,"endColumn":9,"suggestions":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.store'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-native-reassign",["67"],"no-negated-in-lhs",["68"],{"desc":"69","fix":"70"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.store]",{"range":"71","text":"72"},[1251,1253],"[props.store]"]